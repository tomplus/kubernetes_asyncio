# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.25.11
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import kubernetes_asyncio.client
from kubernetes_asyncio.client.models.v2beta2_horizontal_pod_autoscaler_list import V2beta2HorizontalPodAutoscalerList  # noqa: E501
from kubernetes_asyncio.client.rest import ApiException

class TestV2beta2HorizontalPodAutoscalerList(unittest.TestCase):
    """V2beta2HorizontalPodAutoscalerList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test V2beta2HorizontalPodAutoscalerList
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = kubernetes_asyncio.client.models.v2beta2_horizontal_pod_autoscaler_list.V2beta2HorizontalPodAutoscalerList()  # noqa: E501
        if include_optional :
            return V2beta2HorizontalPodAutoscalerList(
                api_version = '', 
                items = [
                    kubernetes_asyncio.client.models.v2beta2/horizontal_pod_autoscaler.v2beta2.HorizontalPodAutoscaler(
                        api_version = '', 
                        kind = '', 
                        metadata = kubernetes_asyncio.client.models.v1/object_meta.v1.ObjectMeta(
                            annotations = {
                                'key' : ''
                                }, 
                            creation_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            deletion_grace_period_seconds = 56, 
                            deletion_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            finalizers = [
                                ''
                                ], 
                            generate_name = '', 
                            generation = 56, 
                            labels = {
                                'key' : ''
                                }, 
                            managed_fields = [
                                kubernetes_asyncio.client.models.v1/managed_fields_entry.v1.ManagedFieldsEntry(
                                    api_version = '', 
                                    fields_type = '', 
                                    fields_v1 = kubernetes_asyncio.client.models.fields_v1.fieldsV1(), 
                                    manager = '', 
                                    operation = '', 
                                    subresource = '', 
                                    time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                ], 
                            name = '', 
                            namespace = '', 
                            owner_references = [
                                kubernetes_asyncio.client.models.v1/owner_reference.v1.OwnerReference(
                                    api_version = '', 
                                    block_owner_deletion = True, 
                                    controller = True, 
                                    kind = '', 
                                    name = '', 
                                    uid = '', )
                                ], 
                            resource_version = '', 
                            self_link = '', 
                            uid = '', ), 
                        spec = kubernetes_asyncio.client.models.v2beta2/horizontal_pod_autoscaler_spec.v2beta2.HorizontalPodAutoscalerSpec(
                            behavior = kubernetes_asyncio.client.models.v2beta2/horizontal_pod_autoscaler_behavior.v2beta2.HorizontalPodAutoscalerBehavior(
                                scale_down = kubernetes_asyncio.client.models.v2beta2/hpa_scaling_rules.v2beta2.HPAScalingRules(
                                    policies = [
                                        kubernetes_asyncio.client.models.v2beta2/hpa_scaling_policy.v2beta2.HPAScalingPolicy(
                                            period_seconds = 56, 
                                            type = '', 
                                            value = 56, )
                                        ], 
                                    select_policy = '', 
                                    stabilization_window_seconds = 56, ), 
                                scale_up = kubernetes_asyncio.client.models.v2beta2/hpa_scaling_rules.v2beta2.HPAScalingRules(
                                    select_policy = '', 
                                    stabilization_window_seconds = 56, ), ), 
                            max_replicas = 56, 
                            metrics = [
                                kubernetes_asyncio.client.models.v2beta2/metric_spec.v2beta2.MetricSpec(
                                    container_resource = kubernetes_asyncio.client.models.v2beta2/container_resource_metric_source.v2beta2.ContainerResourceMetricSource(
                                        container = '', 
                                        name = '', 
                                        target = kubernetes_asyncio.client.models.v2beta2/metric_target.v2beta2.MetricTarget(
                                            average_utilization = 56, 
                                            average_value = '', 
                                            type = '', 
                                            value = '', ), ), 
                                    external = kubernetes_asyncio.client.models.v2beta2/external_metric_source.v2beta2.ExternalMetricSource(
                                        metric = kubernetes_asyncio.client.models.v2beta2/metric_identifier.v2beta2.MetricIdentifier(
                                            name = '', 
                                            selector = kubernetes_asyncio.client.models.v1/label_selector.v1.LabelSelector(
                                                match_expressions = [
                                                    kubernetes_asyncio.client.models.v1/label_selector_requirement.v1.LabelSelectorRequirement(
                                                        key = '', 
                                                        operator = '', 
                                                        values = [
                                                            ''
                                                            ], )
                                                    ], 
                                                match_labels = {
                                                    'key' : ''
                                                    }, ), ), 
                                        target = kubernetes_asyncio.client.models.v2beta2/metric_target.v2beta2.MetricTarget(
                                            average_utilization = 56, 
                                            average_value = '', 
                                            type = '', 
                                            value = '', ), ), 
                                    object = kubernetes_asyncio.client.models.v2beta2/object_metric_source.v2beta2.ObjectMetricSource(
                                        described_object = kubernetes_asyncio.client.models.v2beta2/cross_version_object_reference.v2beta2.CrossVersionObjectReference(
                                            api_version = '', 
                                            kind = '', 
                                            name = '', ), 
                                        metric = kubernetes_asyncio.client.models.v2beta2/metric_identifier.v2beta2.MetricIdentifier(
                                            name = '', ), 
                                        target = kubernetes_asyncio.client.models.v2beta2/metric_target.v2beta2.MetricTarget(
                                            average_utilization = 56, 
                                            average_value = '', 
                                            type = '', 
                                            value = '', ), ), 
                                    pods = kubernetes_asyncio.client.models.v2beta2/pods_metric_source.v2beta2.PodsMetricSource(
                                        metric = kubernetes_asyncio.client.models.v2beta2/metric_identifier.v2beta2.MetricIdentifier(
                                            name = '', ), 
                                        target = kubernetes_asyncio.client.models.v2beta2/metric_target.v2beta2.MetricTarget(
                                            average_utilization = 56, 
                                            average_value = '', 
                                            type = '', 
                                            value = '', ), ), 
                                    resource = kubernetes_asyncio.client.models.v2beta2/resource_metric_source.v2beta2.ResourceMetricSource(
                                        name = '', 
                                        target = kubernetes_asyncio.client.models.v2beta2/metric_target.v2beta2.MetricTarget(
                                            average_utilization = 56, 
                                            average_value = '', 
                                            type = '', 
                                            value = '', ), ), 
                                    type = '', )
                                ], 
                            min_replicas = 56, 
                            scale_target_ref = kubernetes_asyncio.client.models.v2beta2/cross_version_object_reference.v2beta2.CrossVersionObjectReference(
                                api_version = '', 
                                kind = '', 
                                name = '', ), ), 
                        status = kubernetes_asyncio.client.models.v2beta2/horizontal_pod_autoscaler_status.v2beta2.HorizontalPodAutoscalerStatus(
                            conditions = [
                                kubernetes_asyncio.client.models.v2beta2/horizontal_pod_autoscaler_condition.v2beta2.HorizontalPodAutoscalerCondition(
                                    last_transition_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    message = '', 
                                    reason = '', 
                                    status = '', 
                                    type = '', )
                                ], 
                            current_metrics = [
                                kubernetes_asyncio.client.models.v2beta2/metric_status.v2beta2.MetricStatus(
                                    type = '', )
                                ], 
                            current_replicas = 56, 
                            desired_replicas = 56, 
                            last_scale_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            observed_generation = 56, ), )
                    ], 
                kind = '', 
                metadata = kubernetes_asyncio.client.models.v1/list_meta.v1.ListMeta(
                    continue = '', 
                    remaining_item_count = 56, 
                    resource_version = '', 
                    self_link = '', )
            )
        else :
            return V2beta2HorizontalPodAutoscalerList(
                items = [
                    kubernetes_asyncio.client.models.v2beta2/horizontal_pod_autoscaler.v2beta2.HorizontalPodAutoscaler(
                        api_version = '', 
                        kind = '', 
                        metadata = kubernetes_asyncio.client.models.v1/object_meta.v1.ObjectMeta(
                            annotations = {
                                'key' : ''
                                }, 
                            creation_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            deletion_grace_period_seconds = 56, 
                            deletion_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            finalizers = [
                                ''
                                ], 
                            generate_name = '', 
                            generation = 56, 
                            labels = {
                                'key' : ''
                                }, 
                            managed_fields = [
                                kubernetes_asyncio.client.models.v1/managed_fields_entry.v1.ManagedFieldsEntry(
                                    api_version = '', 
                                    fields_type = '', 
                                    fields_v1 = kubernetes_asyncio.client.models.fields_v1.fieldsV1(), 
                                    manager = '', 
                                    operation = '', 
                                    subresource = '', 
                                    time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                ], 
                            name = '', 
                            namespace = '', 
                            owner_references = [
                                kubernetes_asyncio.client.models.v1/owner_reference.v1.OwnerReference(
                                    api_version = '', 
                                    block_owner_deletion = True, 
                                    controller = True, 
                                    kind = '', 
                                    name = '', 
                                    uid = '', )
                                ], 
                            resource_version = '', 
                            self_link = '', 
                            uid = '', ), 
                        spec = kubernetes_asyncio.client.models.v2beta2/horizontal_pod_autoscaler_spec.v2beta2.HorizontalPodAutoscalerSpec(
                            behavior = kubernetes_asyncio.client.models.v2beta2/horizontal_pod_autoscaler_behavior.v2beta2.HorizontalPodAutoscalerBehavior(
                                scale_down = kubernetes_asyncio.client.models.v2beta2/hpa_scaling_rules.v2beta2.HPAScalingRules(
                                    policies = [
                                        kubernetes_asyncio.client.models.v2beta2/hpa_scaling_policy.v2beta2.HPAScalingPolicy(
                                            period_seconds = 56, 
                                            type = '', 
                                            value = 56, )
                                        ], 
                                    select_policy = '', 
                                    stabilization_window_seconds = 56, ), 
                                scale_up = kubernetes_asyncio.client.models.v2beta2/hpa_scaling_rules.v2beta2.HPAScalingRules(
                                    select_policy = '', 
                                    stabilization_window_seconds = 56, ), ), 
                            max_replicas = 56, 
                            metrics = [
                                kubernetes_asyncio.client.models.v2beta2/metric_spec.v2beta2.MetricSpec(
                                    container_resource = kubernetes_asyncio.client.models.v2beta2/container_resource_metric_source.v2beta2.ContainerResourceMetricSource(
                                        container = '', 
                                        name = '', 
                                        target = kubernetes_asyncio.client.models.v2beta2/metric_target.v2beta2.MetricTarget(
                                            average_utilization = 56, 
                                            average_value = '', 
                                            type = '', 
                                            value = '', ), ), 
                                    external = kubernetes_asyncio.client.models.v2beta2/external_metric_source.v2beta2.ExternalMetricSource(
                                        metric = kubernetes_asyncio.client.models.v2beta2/metric_identifier.v2beta2.MetricIdentifier(
                                            name = '', 
                                            selector = kubernetes_asyncio.client.models.v1/label_selector.v1.LabelSelector(
                                                match_expressions = [
                                                    kubernetes_asyncio.client.models.v1/label_selector_requirement.v1.LabelSelectorRequirement(
                                                        key = '', 
                                                        operator = '', 
                                                        values = [
                                                            ''
                                                            ], )
                                                    ], 
                                                match_labels = {
                                                    'key' : ''
                                                    }, ), ), 
                                        target = kubernetes_asyncio.client.models.v2beta2/metric_target.v2beta2.MetricTarget(
                                            average_utilization = 56, 
                                            average_value = '', 
                                            type = '', 
                                            value = '', ), ), 
                                    object = kubernetes_asyncio.client.models.v2beta2/object_metric_source.v2beta2.ObjectMetricSource(
                                        described_object = kubernetes_asyncio.client.models.v2beta2/cross_version_object_reference.v2beta2.CrossVersionObjectReference(
                                            api_version = '', 
                                            kind = '', 
                                            name = '', ), 
                                        metric = kubernetes_asyncio.client.models.v2beta2/metric_identifier.v2beta2.MetricIdentifier(
                                            name = '', ), 
                                        target = kubernetes_asyncio.client.models.v2beta2/metric_target.v2beta2.MetricTarget(
                                            average_utilization = 56, 
                                            average_value = '', 
                                            type = '', 
                                            value = '', ), ), 
                                    pods = kubernetes_asyncio.client.models.v2beta2/pods_metric_source.v2beta2.PodsMetricSource(
                                        metric = kubernetes_asyncio.client.models.v2beta2/metric_identifier.v2beta2.MetricIdentifier(
                                            name = '', ), 
                                        target = kubernetes_asyncio.client.models.v2beta2/metric_target.v2beta2.MetricTarget(
                                            average_utilization = 56, 
                                            average_value = '', 
                                            type = '', 
                                            value = '', ), ), 
                                    resource = kubernetes_asyncio.client.models.v2beta2/resource_metric_source.v2beta2.ResourceMetricSource(
                                        name = '', 
                                        target = kubernetes_asyncio.client.models.v2beta2/metric_target.v2beta2.MetricTarget(
                                            average_utilization = 56, 
                                            average_value = '', 
                                            type = '', 
                                            value = '', ), ), 
                                    type = '', )
                                ], 
                            min_replicas = 56, 
                            scale_target_ref = kubernetes_asyncio.client.models.v2beta2/cross_version_object_reference.v2beta2.CrossVersionObjectReference(
                                api_version = '', 
                                kind = '', 
                                name = '', ), ), 
                        status = kubernetes_asyncio.client.models.v2beta2/horizontal_pod_autoscaler_status.v2beta2.HorizontalPodAutoscalerStatus(
                            conditions = [
                                kubernetes_asyncio.client.models.v2beta2/horizontal_pod_autoscaler_condition.v2beta2.HorizontalPodAutoscalerCondition(
                                    last_transition_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    message = '', 
                                    reason = '', 
                                    status = '', 
                                    type = '', )
                                ], 
                            current_metrics = [
                                kubernetes_asyncio.client.models.v2beta2/metric_status.v2beta2.MetricStatus(
                                    type = '', )
                                ], 
                            current_replicas = 56, 
                            desired_replicas = 56, 
                            last_scale_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            observed_generation = 56, ), )
                    ],
        )

    def testV2beta2HorizontalPodAutoscalerList(self):
        """Test V2beta2HorizontalPodAutoscalerList"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
