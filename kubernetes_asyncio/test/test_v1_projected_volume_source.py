# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.25.11
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import kubernetes_asyncio.client
from kubernetes_asyncio.client.models.v1_projected_volume_source import V1ProjectedVolumeSource  # noqa: E501
from kubernetes_asyncio.client.rest import ApiException

class TestV1ProjectedVolumeSource(unittest.TestCase):
    """V1ProjectedVolumeSource unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test V1ProjectedVolumeSource
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = kubernetes_asyncio.client.models.v1_projected_volume_source.V1ProjectedVolumeSource()  # noqa: E501
        if include_optional :
            return V1ProjectedVolumeSource(
                default_mode = 56, 
                sources = [
                    kubernetes_asyncio.client.models.v1/volume_projection.v1.VolumeProjection(
                        config_map = kubernetes_asyncio.client.models.v1/config_map_projection.v1.ConfigMapProjection(
                            items = [
                                kubernetes_asyncio.client.models.v1/key_to_path.v1.KeyToPath(
                                    key = '', 
                                    mode = 56, 
                                    path = '', )
                                ], 
                            name = '', 
                            optional = True, ), 
                        downward_api = kubernetes_asyncio.client.models.v1/downward_api_projection.v1.DownwardAPIProjection(), 
                        secret = kubernetes_asyncio.client.models.v1/secret_projection.v1.SecretProjection(
                            name = '', 
                            optional = True, ), 
                        service_account_token = kubernetes_asyncio.client.models.v1/service_account_token_projection.v1.ServiceAccountTokenProjection(
                            audience = '', 
                            expiration_seconds = 56, 
                            path = '', ), )
                    ]
            )
        else :
            return V1ProjectedVolumeSource(
        )

    def testV1ProjectedVolumeSource(self):
        """Test V1ProjectedVolumeSource"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
