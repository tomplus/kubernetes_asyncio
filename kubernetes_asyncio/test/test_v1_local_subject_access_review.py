# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.33.3
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import kubernetes_asyncio.client
from kubernetes_asyncio.client.models.v1_local_subject_access_review import V1LocalSubjectAccessReview  # noqa: E501
from kubernetes_asyncio.client.rest import ApiException

class TestV1LocalSubjectAccessReview(unittest.TestCase):
    """V1LocalSubjectAccessReview unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test V1LocalSubjectAccessReview
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = kubernetes_asyncio.client.models.v1_local_subject_access_review.V1LocalSubjectAccessReview()  # noqa: E501
        if include_optional :
            return V1LocalSubjectAccessReview(
                api_version = '', 
                kind = '', 
                metadata = kubernetes_asyncio.client.models.v1/object_meta.v1.ObjectMeta(
                    annotations = {
                        'key' : ''
                        }, 
                    creation_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    deletion_grace_period_seconds = 56, 
                    deletion_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    finalizers = [
                        ''
                        ], 
                    generate_name = '', 
                    generation = 56, 
                    labels = {
                        'key' : ''
                        }, 
                    managed_fields = [
                        kubernetes_asyncio.client.models.v1/managed_fields_entry.v1.ManagedFieldsEntry(
                            api_version = '', 
                            fields_type = '', 
                            fields_v1 = kubernetes_asyncio.client.models.fields_v1.fieldsV1(), 
                            manager = '', 
                            operation = '', 
                            subresource = '', 
                            time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                        ], 
                    name = '', 
                    namespace = '', 
                    owner_references = [
                        kubernetes_asyncio.client.models.v1/owner_reference.v1.OwnerReference(
                            api_version = '', 
                            block_owner_deletion = True, 
                            controller = True, 
                            kind = '', 
                            name = '', 
                            uid = '', )
                        ], 
                    resource_version = '', 
                    self_link = '', 
                    uid = '', ), 
                spec = kubernetes_asyncio.client.models.v1/subject_access_review_spec.v1.SubjectAccessReviewSpec(
                    extra = {
                        'key' : [
                            ''
                            ]
                        }, 
                    groups = [
                        ''
                        ], 
                    non_resource_attributes = kubernetes_asyncio.client.models.v1/non_resource_attributes.v1.NonResourceAttributes(
                        path = '', 
                        verb = '', ), 
                    resource_attributes = kubernetes_asyncio.client.models.v1/resource_attributes.v1.ResourceAttributes(
                        field_selector = kubernetes_asyncio.client.models.v1/field_selector_attributes.v1.FieldSelectorAttributes(
                            raw_selector = '', 
                            requirements = [
                                kubernetes_asyncio.client.models.v1/field_selector_requirement.v1.FieldSelectorRequirement(
                                    key = '', 
                                    operator = '', 
                                    values = [
                                        ''
                                        ], )
                                ], ), 
                        group = '', 
                        label_selector = kubernetes_asyncio.client.models.v1/label_selector_attributes.v1.LabelSelectorAttributes(
                            raw_selector = '', ), 
                        name = '', 
                        namespace = '', 
                        resource = '', 
                        subresource = '', 
                        verb = '', 
                        version = '', ), 
                    uid = '', 
                    user = '', ), 
                status = kubernetes_asyncio.client.models.v1/subject_access_review_status.v1.SubjectAccessReviewStatus(
                    allowed = True, 
                    denied = True, 
                    evaluation_error = '', 
                    reason = '', )
            )
        else :
            return V1LocalSubjectAccessReview(
                spec = kubernetes_asyncio.client.models.v1/subject_access_review_spec.v1.SubjectAccessReviewSpec(
                    extra = {
                        'key' : [
                            ''
                            ]
                        }, 
                    groups = [
                        ''
                        ], 
                    non_resource_attributes = kubernetes_asyncio.client.models.v1/non_resource_attributes.v1.NonResourceAttributes(
                        path = '', 
                        verb = '', ), 
                    resource_attributes = kubernetes_asyncio.client.models.v1/resource_attributes.v1.ResourceAttributes(
                        field_selector = kubernetes_asyncio.client.models.v1/field_selector_attributes.v1.FieldSelectorAttributes(
                            raw_selector = '', 
                            requirements = [
                                kubernetes_asyncio.client.models.v1/field_selector_requirement.v1.FieldSelectorRequirement(
                                    key = '', 
                                    operator = '', 
                                    values = [
                                        ''
                                        ], )
                                ], ), 
                        group = '', 
                        label_selector = kubernetes_asyncio.client.models.v1/label_selector_attributes.v1.LabelSelectorAttributes(
                            raw_selector = '', ), 
                        name = '', 
                        namespace = '', 
                        resource = '', 
                        subresource = '', 
                        verb = '', 
                        version = '', ), 
                    uid = '', 
                    user = '', ),
        )

    def testV1LocalSubjectAccessReview(self):
        """Test V1LocalSubjectAccessReview"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
