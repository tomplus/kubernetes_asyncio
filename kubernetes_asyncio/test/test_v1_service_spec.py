# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.33.3
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import kubernetes_asyncio.client
from kubernetes_asyncio.client.models.v1_service_spec import V1ServiceSpec  # noqa: E501
from kubernetes_asyncio.client.rest import ApiException

class TestV1ServiceSpec(unittest.TestCase):
    """V1ServiceSpec unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test V1ServiceSpec
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = kubernetes_asyncio.client.models.v1_service_spec.V1ServiceSpec()  # noqa: E501
        if include_optional :
            return V1ServiceSpec(
                allocate_load_balancer_node_ports = True, 
                cluster_ip = '', 
                cluster_ips = [
                    ''
                    ], 
                external_ips = [
                    ''
                    ], 
                external_name = '', 
                external_traffic_policy = '', 
                health_check_node_port = 56, 
                internal_traffic_policy = '', 
                ip_families = [
                    ''
                    ], 
                ip_family_policy = '', 
                load_balancer_class = '', 
                load_balancer_ip = '', 
                load_balancer_source_ranges = [
                    ''
                    ], 
                ports = [
                    kubernetes_asyncio.client.models.v1/service_port.v1.ServicePort(
                        app_protocol = '', 
                        name = '', 
                        node_port = 56, 
                        port = 56, 
                        protocol = '', 
                        target_port = kubernetes_asyncio.client.models.target_port.targetPort(), )
                    ], 
                publish_not_ready_addresses = True, 
                selector = {
                    'key' : ''
                    }, 
                session_affinity = '', 
                session_affinity_config = kubernetes_asyncio.client.models.v1/session_affinity_config.v1.SessionAffinityConfig(
                    kubernetes_asyncio.client_ip = kubernetes_asyncio.client.models.v1/kubernetes_asyncio.client_ip_config.v1.ClientIPConfig(
                        timeout_seconds = 56, ), ), 
                traffic_distribution = '', 
                type = ''
            )
        else :
            return V1ServiceSpec(
        )

    def testV1ServiceSpec(self):
        """Test V1ServiceSpec"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
