# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.25.11
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import kubernetes_asyncio.client
from kubernetes_asyncio.client.models.v2beta2_horizontal_pod_autoscaler_spec import V2beta2HorizontalPodAutoscalerSpec  # noqa: E501
from kubernetes_asyncio.client.rest import ApiException

class TestV2beta2HorizontalPodAutoscalerSpec(unittest.TestCase):
    """V2beta2HorizontalPodAutoscalerSpec unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test V2beta2HorizontalPodAutoscalerSpec
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = kubernetes_asyncio.client.models.v2beta2_horizontal_pod_autoscaler_spec.V2beta2HorizontalPodAutoscalerSpec()  # noqa: E501
        if include_optional :
            return V2beta2HorizontalPodAutoscalerSpec(
                behavior = kubernetes_asyncio.client.models.v2beta2/horizontal_pod_autoscaler_behavior.v2beta2.HorizontalPodAutoscalerBehavior(
                    scale_down = kubernetes_asyncio.client.models.v2beta2/hpa_scaling_rules.v2beta2.HPAScalingRules(
                        policies = [
                            kubernetes_asyncio.client.models.v2beta2/hpa_scaling_policy.v2beta2.HPAScalingPolicy(
                                period_seconds = 56, 
                                type = '', 
                                value = 56, )
                            ], 
                        select_policy = '', 
                        stabilization_window_seconds = 56, ), 
                    scale_up = kubernetes_asyncio.client.models.v2beta2/hpa_scaling_rules.v2beta2.HPAScalingRules(
                        select_policy = '', 
                        stabilization_window_seconds = 56, ), ), 
                max_replicas = 56, 
                metrics = [
                    kubernetes_asyncio.client.models.v2beta2/metric_spec.v2beta2.MetricSpec(
                        container_resource = kubernetes_asyncio.client.models.v2beta2/container_resource_metric_source.v2beta2.ContainerResourceMetricSource(
                            container = '', 
                            name = '', 
                            target = kubernetes_asyncio.client.models.v2beta2/metric_target.v2beta2.MetricTarget(
                                average_utilization = 56, 
                                average_value = '', 
                                type = '', 
                                value = '', ), ), 
                        external = kubernetes_asyncio.client.models.v2beta2/external_metric_source.v2beta2.ExternalMetricSource(
                            metric = kubernetes_asyncio.client.models.v2beta2/metric_identifier.v2beta2.MetricIdentifier(
                                name = '', 
                                selector = kubernetes_asyncio.client.models.v1/label_selector.v1.LabelSelector(
                                    match_expressions = [
                                        kubernetes_asyncio.client.models.v1/label_selector_requirement.v1.LabelSelectorRequirement(
                                            key = '', 
                                            operator = '', 
                                            values = [
                                                ''
                                                ], )
                                        ], 
                                    match_labels = {
                                        'key' : ''
                                        }, ), ), 
                            target = kubernetes_asyncio.client.models.v2beta2/metric_target.v2beta2.MetricTarget(
                                average_utilization = 56, 
                                average_value = '', 
                                type = '', 
                                value = '', ), ), 
                        object = kubernetes_asyncio.client.models.v2beta2/object_metric_source.v2beta2.ObjectMetricSource(
                            described_object = kubernetes_asyncio.client.models.v2beta2/cross_version_object_reference.v2beta2.CrossVersionObjectReference(
                                api_version = '', 
                                kind = '', 
                                name = '', ), 
                            metric = kubernetes_asyncio.client.models.v2beta2/metric_identifier.v2beta2.MetricIdentifier(
                                name = '', ), 
                            target = kubernetes_asyncio.client.models.v2beta2/metric_target.v2beta2.MetricTarget(
                                average_utilization = 56, 
                                average_value = '', 
                                type = '', 
                                value = '', ), ), 
                        pods = kubernetes_asyncio.client.models.v2beta2/pods_metric_source.v2beta2.PodsMetricSource(
                            metric = kubernetes_asyncio.client.models.v2beta2/metric_identifier.v2beta2.MetricIdentifier(
                                name = '', ), 
                            target = kubernetes_asyncio.client.models.v2beta2/metric_target.v2beta2.MetricTarget(
                                average_utilization = 56, 
                                average_value = '', 
                                type = '', 
                                value = '', ), ), 
                        resource = kubernetes_asyncio.client.models.v2beta2/resource_metric_source.v2beta2.ResourceMetricSource(
                            name = '', 
                            target = kubernetes_asyncio.client.models.v2beta2/metric_target.v2beta2.MetricTarget(
                                average_utilization = 56, 
                                average_value = '', 
                                type = '', 
                                value = '', ), ), 
                        type = '', )
                    ], 
                min_replicas = 56, 
                scale_target_ref = kubernetes_asyncio.client.models.v2beta2/cross_version_object_reference.v2beta2.CrossVersionObjectReference(
                    api_version = '', 
                    kind = '', 
                    name = '', )
            )
        else :
            return V2beta2HorizontalPodAutoscalerSpec(
                max_replicas = 56,
                scale_target_ref = kubernetes_asyncio.client.models.v2beta2/cross_version_object_reference.v2beta2.CrossVersionObjectReference(
                    api_version = '', 
                    kind = '', 
                    name = '', ),
        )

    def testV2beta2HorizontalPodAutoscalerSpec(self):
        """Test V2beta2HorizontalPodAutoscalerSpec"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
