# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.33.3
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import kubernetes_asyncio.client
from kubernetes_asyncio.client.models.v1_pod_security_context import V1PodSecurityContext  # noqa: E501
from kubernetes_asyncio.client.rest import ApiException

class TestV1PodSecurityContext(unittest.TestCase):
    """V1PodSecurityContext unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test V1PodSecurityContext
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = kubernetes_asyncio.client.models.v1_pod_security_context.V1PodSecurityContext()  # noqa: E501
        if include_optional :
            return V1PodSecurityContext(
                app_armor_profile = kubernetes_asyncio.client.models.v1/app_armor_profile.v1.AppArmorProfile(
                    localhost_profile = '', 
                    type = '', ), 
                fs_group = 56, 
                fs_group_change_policy = '', 
                run_as_group = 56, 
                run_as_non_root = True, 
                run_as_user = 56, 
                se_linux_change_policy = '', 
                se_linux_options = kubernetes_asyncio.client.models.v1/se_linux_options.v1.SELinuxOptions(
                    level = '', 
                    role = '', 
                    type = '', 
                    user = '', ), 
                seccomp_profile = kubernetes_asyncio.client.models.v1/seccomp_profile.v1.SeccompProfile(
                    localhost_profile = '', 
                    type = '', ), 
                supplemental_groups = [
                    56
                    ], 
                supplemental_groups_policy = '', 
                sysctls = [
                    kubernetes_asyncio.client.models.v1/sysctl.v1.Sysctl(
                        name = '', 
                        value = '', )
                    ], 
                windows_options = kubernetes_asyncio.client.models.v1/windows_security_context_options.v1.WindowsSecurityContextOptions(
                    gmsa_credential_spec = '', 
                    gmsa_credential_spec_name = '', 
                    host_process = True, 
                    run_as_user_name = '', )
            )
        else :
            return V1PodSecurityContext(
        )

    def testV1PodSecurityContext(self):
        """Test V1PodSecurityContext"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
