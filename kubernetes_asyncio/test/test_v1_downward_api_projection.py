# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.33.3
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import kubernetes_asyncio.client
from kubernetes_asyncio.client.models.v1_downward_api_projection import V1DownwardAPIProjection  # noqa: E501
from kubernetes_asyncio.client.rest import ApiException

class TestV1DownwardAPIProjection(unittest.TestCase):
    """V1DownwardAPIProjection unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test V1DownwardAPIProjection
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = kubernetes_asyncio.client.models.v1_downward_api_projection.V1DownwardAPIProjection()  # noqa: E501
        if include_optional :
            return V1DownwardAPIProjection(
                items = [
                    kubernetes_asyncio.client.models.v1/downward_api_volume_file.v1.DownwardAPIVolumeFile(
                        field_ref = kubernetes_asyncio.client.models.v1/object_field_selector.v1.ObjectFieldSelector(
                            api_version = '', 
                            field_path = '', ), 
                        mode = 56, 
                        path = '', 
                        resource_field_ref = kubernetes_asyncio.client.models.v1/resource_field_selector.v1.ResourceFieldSelector(
                            container_name = '', 
                            divisor = '', 
                            resource = '', ), )
                    ]
            )
        else :
            return V1DownwardAPIProjection(
        )

    def testV1DownwardAPIProjection(self):
        """Test V1DownwardAPIProjection"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
